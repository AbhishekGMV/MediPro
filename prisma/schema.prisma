// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  engineType    = "binary"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider     = "postgres"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Doctor {
  id                String         @id @default(uuid())
  name              String
  phone             String         @unique
  imageUrl          String
  signatureUrl      String
  signatureFilename String
  role              String
  password          String
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @default(now())
  Appointment       Appointment[]
  Slot              Slot[]
  Consultation      Consultation[]
}

model Patient {
  id           String         @id @default(uuid())
  name         String
  gender       String
  phone        String         @unique
  imageUrl     String
  age          Int
  password     String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now())
  Appointment  Appointment[]
  Consultation Consultation[]
}

model Slot {
  id          String        @id @default(uuid())
  slotNumber  Int
  doctorId    String
  date        DateTime      @default(now()) @db.Date
  startTime   DateTime
  endTime     DateTime
  status      String
  doctor      Doctor        @relation(fields: [doctorId], references: [id])
  Appointment Appointment[]

  @@index([doctorId])
}

model Appointment {
  id           String         @id @default(uuid())
  doctor       Doctor         @relation(fields: [doctorId], references: [id])
  patient      Patient        @relation(fields: [patientId], references: [id])
  slot         Slot           @relation(fields: [slotId], references: [id])
  consultation Consultation[]
  doctorId     String
  patientId    String
  slotId       String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now())

  @@index([doctorId])
  @@index([patientId])
  @@index([slotId])
}

model Consultation {
  id                   String      @id @default(uuid())
  doctor               Doctor      @relation(fields: [doctorId], references: [id])
  patient              Patient     @relation(fields: [patientId], references: [id])
  appointment          Appointment @relation(fields: [appointmentId], references: [id])
  doctorId             String
  patientId            String
  appointmentId        String
  prescriptionUrl      String
  prescriptionFilename String
  audio                String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now())

  @@index([doctorId])
  @@index([patientId])
  @@index([appointmentId])
}
